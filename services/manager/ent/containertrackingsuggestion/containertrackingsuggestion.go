// Code generated by entc, DO NOT EDIT.

package containertrackingsuggestion

import (
	"time"
)

const (
	// Label holds the string label denoting the containertrackingsuggestion type in the database.
	Label = "container_tracking_suggestion"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldContainerID holds the string denoting the container_id field in the database.
	FieldContainerID = "container_id"
	// FieldResult holds the string denoting the result field in the database.
	FieldResult = "result"
	// FieldCamID holds the string denoting the cam_id field in the database.
	FieldCamID = "cam_id"
	// FieldTrackingID holds the string denoting the tracking_id field in the database.
	FieldTrackingID = "tracking_id"
	// FieldTrackingType holds the string denoting the tracking_type field in the database.
	FieldTrackingType = "tracking_type"
	// FieldBic holds the string denoting the bic field in the database.
	FieldBic = "bic"
	// FieldSerial holds the string denoting the serial field in the database.
	FieldSerial = "serial"
	// FieldChecksum holds the string denoting the checksum field in the database.
	FieldChecksum = "checksum"
	// FieldImageURL holds the string denoting the image_url field in the database.
	FieldImageURL = "image_url"
	// FieldScore holds the string denoting the score field in the database.
	FieldScore = "score"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeCam holds the string denoting the cam edge name in mutations.
	EdgeCam = "cam"
	// EdgeTracking holds the string denoting the tracking edge name in mutations.
	EdgeTracking = "tracking"
	// Table holds the table name of the containertrackingsuggestion in the database.
	Table = "container_tracking_suggestions"
	// CamTable is the table that holds the cam relation/edge.
	CamTable = "container_tracking_suggestions"
	// CamInverseTable is the table name for the CamSetting entity.
	// It exists in this package in order to avoid circular dependency with the "camsetting" package.
	CamInverseTable = "cam_settings"
	// CamColumn is the table column denoting the cam relation/edge.
	CamColumn = "cam_id"
	// TrackingTable is the table that holds the tracking relation/edge.
	TrackingTable = "container_tracking_suggestions"
	// TrackingInverseTable is the table name for the ContainerTracking entity.
	// It exists in this package in order to avoid circular dependency with the "containertracking" package.
	TrackingInverseTable = "container_trackings"
	// TrackingColumn is the table column denoting the tracking relation/edge.
	TrackingColumn = "tracking_id"
)

// Columns holds all SQL columns for containertrackingsuggestion fields.
var Columns = []string{
	FieldID,
	FieldContainerID,
	FieldResult,
	FieldCamID,
	FieldTrackingID,
	FieldTrackingType,
	FieldBic,
	FieldSerial,
	FieldChecksum,
	FieldImageURL,
	FieldScore,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultContainerID holds the default value on creation for the "container_id" field.
	DefaultContainerID string
	// DefaultResult holds the default value on creation for the "result" field.
	DefaultResult string
	// DefaultBic holds the default value on creation for the "bic" field.
	DefaultBic string
	// DefaultSerial holds the default value on creation for the "serial" field.
	DefaultSerial string
	// DefaultChecksum holds the default value on creation for the "checksum" field.
	DefaultChecksum string
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
