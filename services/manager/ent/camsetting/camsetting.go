// Code generated by entc, DO NOT EDIT.

package camsetting

import (
	"time"
)

const (
	// Label holds the string label denoting the camsetting type in the database.
	Label = "cam_setting"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldPosition holds the string denoting the position field in the database.
	FieldPosition = "position"
	// FieldLaneID holds the string denoting the lane_id field in the database.
	FieldLaneID = "lane_id"
	// FieldRtspURL holds the string denoting the rtsp_url field in the database.
	FieldRtspURL = "rtsp_url"
	// FieldWebrtcURL holds the string denoting the webrtc_url field in the database.
	FieldWebrtcURL = "webrtc_url"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeLane holds the string denoting the lane edge name in mutations.
	EdgeLane = "lane"
	// EdgeSuggestions holds the string denoting the suggestions edge name in mutations.
	EdgeSuggestions = "suggestions"
	// Table holds the table name of the camsetting in the database.
	Table = "cam_settings"
	// LaneTable is the table that holds the lane relation/edge.
	LaneTable = "cam_settings"
	// LaneInverseTable is the table name for the Lane entity.
	// It exists in this package in order to avoid circular dependency with the "lane" package.
	LaneInverseTable = "lanes"
	// LaneColumn is the table column denoting the lane relation/edge.
	LaneColumn = "lane_id"
	// SuggestionsTable is the table that holds the suggestions relation/edge.
	SuggestionsTable = "container_tracking_suggestions"
	// SuggestionsInverseTable is the table name for the ContainerTrackingSuggestion entity.
	// It exists in this package in order to avoid circular dependency with the "containertrackingsuggestion" package.
	SuggestionsInverseTable = "container_tracking_suggestions"
	// SuggestionsColumn is the table column denoting the suggestions relation/edge.
	SuggestionsColumn = "cam_id"
)

// Columns holds all SQL columns for camsetting fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldPosition,
	FieldLaneID,
	FieldRtspURL,
	FieldWebrtcURL,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
